<%#
Copyright 2011-2015, The Trustees of Indiana University and Northwestern
  University.  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.

You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed
  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
  CONDITIONS OF ANY KIND, either express or implied. See the License for the
  specific language governing permissions and limitations under the License.
---  END LICENSE_HEADER BLOCK  ---
%>

<% f_start = @current_clip.start_time / 1000.0 %>
<% f_end = @current_clip.end_time / 1000.0 %>
<% @currentStream = @current_masterfile %>
<% @currentStreamInfo = secure_streams(@currentStream.stream_details) %>
<% @currentStreamInfo['t'] = [f_start,f_end] %>
<% if can? :read, @current_masterfile %>
    <section id="content" class="avalon-player" style="width: 100%; visibility: hidden;" tabIndex="-1">
      <% if @currentStream.present? and @currentStream.derivatives.present? %>
        <%= stylesheet_link_tag "mediaelement_rails/mediaelementplayer" =%>

        <% if @currentStreamInfo[:is_video] %>
          <%= master_file_meta_properties(@currentStream) do %>
            <video class="mejs-avalon" controls width="450" height="309" style="width: 100%; height: 100%" id="video-tag" poster="<%= @currentStreamInfo[:poster_image] if f_start == 0 %>" preload="auto" data-current-playlist-item="<%= @current_playlist_item.id %>">
              <% @currentStreamInfo[:stream_flash].each do |flash| %>
                <source src="<%= flash[:url] %>" data-quality="<%= flash[:quality] %>" data-plugin-type="flash" type="video/rtmp"/>
              <% end %>
              <% @currentStreamInfo[:stream_hls].each do |hls| %>
                <source src="<%= hls[:url] %>" data-quality="<%= hls[:quality] %>" data-plugin-type="native" type="application/vnd.apple.mpegURL"/>
              <% end %>
              <% if @currentStreamInfo[:captions_path].present? %>
                <track srclang="en" kind="subtitles" type="<%= @currentStreamInfo[:captions_format] %>" src="<%= @currentStreamInfo[:captions_path] %>"></track>
              <% end %>
            </video>
          <% end %>
        <% else %>
          <%= master_file_meta_properties(@currentStream) do %>
            <audio class="mejs-avalon" controls style="width: 100%;" id="video-tag" preload="true" data-current-playlist-item="<%= @current_playlist_item.id %>">
              <% @currentStreamInfo[:stream_flash].each do |flash| %>
                <source src="<%= flash[:url] %>" data-quality="<%= flash[:quality] %>" data-plugin-type="flash" type="audio/rtmp"/>
              <% end %>
              <% @currentStreamInfo[:stream_hls].each do |hls| %>
                <source src="<%= hls[:url] %>" data-quality="<%= hls[:quality] %>" data-plugin-type="native" type="application/vnd.apple.mpegURL"/>
              <% end %>
            </audio>
          <% end %>
        <% end %>
      <% end %>
    </section>
<% end %>
<% unless can? :read, @current_masterfile %>
  <span class = 'show_playlist_player_denied_title'><h2>Restricted Access</h2></span>
  <span class = 'playlist_item_denied'>
    You do not have permission to playback item <%= @current_masterfile.mediaobject_id %>.
    <% if !user_signed_in? %>
      <br>Have you tried <%= link_to 'logging in', new_user_session_path %>?
    <% end %>
  </span>

<% end %>
<% content_for :page_scripts do %>
  <%= javascript_include_tag "mediaelement_rails/mediaelement-and-player" =%>
  <%= javascript_include_tag 'android_pre_play' %>
  <%= javascript_include_tag 'mediaelement-qualityselector/mep-feature-qualities' %>
  <%= javascript_include_tag 'me-thumb-selector' %>
  <%= javascript_include_tag 'mediaelement-skin-avalon/mep-feature-responsive' %>
  <%= javascript_include_tag 'avalon_player' %>
  <%= javascript_include_tag 'me-add-to-playlist' %>
  <%= javascript_include_tag 'me-track-scrubber' %>

  <%= stylesheet_link_tag "mediaelement-qualityselector/mep-feature-qualities" =%>
  <%= stylesheet_link_tag 'me-thumb-selector' %>
  <%= stylesheet_link_tag "mediaelement-skin-avalon/mejs-skin-avalon" =%>
  <%= stylesheet_link_tag 'me-add-to-playlist' %>
  <%= stylesheet_link_tag 'me-track-scrubber' %>

  <% if @currentStream.present? and @currentStream.derivatives.present? %>
  <script>
    function advancePlaylist() {
      nextUrl = $('.side-playlist li.now_playing').nextAll('li.queue:first').find('a');
      if ($('input[name="autoadvance"]')[0].checked) {
        if (nextUrl.length) {
          if ('remote' in nextUrl[0].dataset) {
            currentPlayer.options['autostart']='true'
            nextUrl.click();
          } else {
            window.location = nextUrl[0].href.replace('autoadvance=false','autoadvance=true');
          }
        } else {
          currentPlayer.pause()
          currentPlayer.setCurrentTime(avalonPlayer.stream_info.t[0] || 0)
        }
      }
    }

    <% if can? :read, @current_masterfile %>

      avalonPlayer = new AvalonPlayer($('#left_column'), <%= @currentStreamInfo.to_json.html_safe %>, {
	audioHeight: <%= MasterFile::AUDIO_HEIGHT %>,
	mobileDisplayedDuration: <%= @currentStream ? (@currentStream.duration.to_f / 1000).round : -1 %>,
	thumbnailSelector: false,
	addToPlaylist: false,
	addMarker: <%= current_user.present? ? 'true' : 'false' %>,
	startQuality: '<%= current_quality(@currentStreamInfo) %>',
	customError: '<%= t("media_objects.player.customError").html_safe %>',
	displayMediaFragment: true,
        displayMarkers: true,
        displayTrackScrubber: true,
        autostart: <%= params[:autostart] == 'true' ? 'true' : 'false' %>,
	success: function(mediaElement, domObject, player) {
            <%# turn off autoadvance if scrubber is clicked %>
            var scrubber =  $('.mejs-time-total')[0];
            var oldclick = scrubber.onclick;
            scrubber.onclick = function(){
              $('input[name="autoadvance"]').prop('checked',false).change();
              if(oldclick){oldclick();}
            }
            player.media.addEventListener('timeupdate', function(e) {
            <%# round times to nearest .1 second for derivative duration discrepancies %>
            t = Math.round(avalonPlayer.player.getCurrentTime()*10)
            <%# if players new currenttime is >= masterfile duration or end of playlist item advance to next playlist item %>
            if (t >= Math.round(avalonPlayer.player.media.duration*10) || t > Math.round(avalonPlayer.stream_info.t[1]*10)) {
              advancePlaylist();
            }
          }, false);
        }
      });
      currentPlayer = avalonPlayer.player;

    <% else %>

      window.setTimeout(advancePlaylist, 5000);

    <% end %>
  </script>
  <% end %>
<% end %>
