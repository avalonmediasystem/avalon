volumes:
  database:
  solr:
  npms:
  data:
  grafana:

networks:
  internal:
  external:

services:
  db: &db-avalon
    image: postgres:14-alpine
    volumes:
      - database:/data
    environment:
      - PGDATA=/data
      - POSTGRES_USER=postgres
      - POSTGRES_DB=avalon
      - POSTGRES_PASSWORD=password
    networks:
      internal:
  db-test:
    <<: *db-avalon
    volumes: []

  fedora: &fedora
    image: fcrepo/fcrepo:6.4.0
    depends_on:
      - createbuckets
    environment:
      - CATALINA_OPTS=-Dfcrepo.autoversioning.enabled=false -Dfcrepo.aws.access-key=minio -Dfcrepo.aws.secret-key=minio123 -Dfcrepo.storage=ocfl-s3 -Dfcrepo.ocfl.s3.bucket=fcrepo -Dfcrepo.s3.endpoint=http://minio:9000 -Dfcrepo.aws.region=us-east-1 -Dfcrepo.metrics.enable=true
    networks:
      internal:
      external:
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"
    ports:
      - 8080:8080
  fedora-test:
    <<: *fedora
    depends_on: []
    environment:
      - CATALINA_OPTS=-Dfcrepo.autoversioning.enabled=false

  solr: &solr
    image: solr:9
    volumes:
      - ./solr/conf:/opt/solr/avalon_conf
      - solr:/var/solr
    command:
      - solr-precreate
      - avalon
      - /opt/solr/avalon_conf
    environment:
      - SOLR_MODULES=analysis-extras,extraction
    networks:
      internal:
      external:
    ports:
      - '8983:8983'
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"
  solr-test:
    <<: *solr
    volumes:
      - ./solr/conf:/opt/solr/avalon_conf

  hls:
    image: avalonmediasystem/nginx:minio-jammy
    environment:
      - AVALON_DOMAIN=http://avalon:3000
      - AVALON_STREAMING_BUCKET_URL=http://minio:9000/derivatives/
    volumes:
      - ./log/nginx:/var/log/nginx
    ports:
      - '8880:80'
    networks:
      internal:
      external:

  redis: &redis
    image: redis:alpine
    networks:
      internal:
  redis-test:
    <<: *redis

  avalon: &avalon
    image: avalonmediasystem/avalon:develop
    build:
      context: .
      target: dev
    command: bash -c "/docker_init.sh && bundle exec rails server -b 0.0.0.0"
    depends_on:
      - db
      - fedora
      - solr
      - redis
      - hls
      - minio
    environment:
      - APP_NAME=avalon
      - BUNDLE_FLAGS=--with development postgres --without production test
      - ENCODE_WORK_DIR=/tmp
      - CONTROLLED_VOCABULARY=config/controlled_vocabulary.yml
      - DATABASE_URL=postgres://postgres:password@db/avalon
      - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true
      - FEDORA_URL=http://fedoraAdmin:fedoraAdmin@fedora:8080/fcrepo/rest
      - FEDORA_BASE_PATH=/dev
      - RAILS_ENV=development
      - RAILS_ADDITIONAL_HOSTS=avalon
      - SETTINGS__REDIS__HOST=redis
      - SETTINGS__REDIS__PORT=6379
      - SECRET_KEY_BASE=abcd
      - SOLR_URL=http://solr:8983/solr/avalon
      - AWS_REGION=us-east-1
      - SETTINGS__ACTIVE_STORAGE__BUCKET=supplementalfiles
      - SETTINGS__ACTIVE_STORAGE__SERVICE=generic_s3
      - SETTINGS__FFMPEG__PATH=/usr/bin/ffmpeg
      - SETTINGS__MINIO__ENDPOINT=http://minio:9000
      - SETTINGS__MINIO__PUBLIC_HOST=http://localhost:9000
      - SETTINGS__MINIO__ACCESS=minio
      - SETTINGS__MINIO__SECRET=minio123
      - SETTINGS__ENCODING__MASTERFILE_BUCKET=masterfiles
      - SETTINGS__ENCODING__DERIVATIVE_BUCKET=derivatives
      - SETTINGS__DROPBOX__PATH=s3://masterfiles/dropbox/
      - SETTINGS__DROPBOX__UPLOAD_URI=s3://masterfiles/dropbox/
      - SETTINGS__MASTER_FILE_MANAGEMENT__PATH=s3://preserves/
      - SETTINGS__MASTER_FILE_MANAGEMENT__STRATEGY=move
      - SETTINGS__STREAMING__CONTENT_PATH=/
      - SETTINGS__STREAMING__STREAM_DEFAULT_QUALITY=medium
      - SETTINGS__STREAMING__HTTP_BASE=http://localhost:8880/avalon
      - SETTINGS__STREAMING__SERVER=nginx
      - SETTINGS__STREAMING__STREAM_TOKEN_TTL=20
      - SYSTEM_GROUPS=administrator,group_manager,manager
      - PIDFILE=tmp/pids/server.pid
      - PUMA_STATE_PATH=tmp/puma.state
      - AVALON_PROFILING=true
      - PROMETHEUS_EXPORTER_HOST=prometheus-rails
    volumes:
      - .:/home/app/avalon
      - npms:/home/app/avalon/node_modules
    ports:
      - '3000:3000'
    networks:
      internal:
      external:
    stdin_open: true
    tty: true

  test:
    <<: *avalon
    command: >
      bash -c "/docker_init.sh && tail -f /dev/null"
    depends_on:
      - db-test
      - fedora-test
      - solr-test
      - redis-test
    environment:
      - DATABASE_URL=postgresql://postgres:password@db-test/avalon
      - SETTINGS__FFMPEG__PATH=/usr/bin/ffmpeg
      - SETTINGS__REDIS__HOST=redis-test
      - SETTINGS__REDIS__PORT=6379
      - FEDORA_URL=http://fedoraAdmin:fedoraAdmin@fedora-test:8080/fcrepo/rest
      - FEDORA_BASE_PATH=/test
      - SOLR_URL=http://solr-test:8983/solr/avalon
      - RAILS_ENV=test
      - BUNDLE_FLAGS=--with aws test postgres --without production
      - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true
    ports: []

  worker:
    <<: *avalon
    command: dumb-init -- bash -c "bundle install && bundle exec sidekiq -C config/sidekiq.yml"
    ports: []

  minio:
    image: minio/minio
    command: minio server /data --console-address ":9090"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_PROMETHEUS_AUTH_TYPE: public
    volumes:
      - data:/data
    ports:
      - 9000:9000
      - 9090:9090
    networks:
      internal:
      external:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb -p myminio/fcrepo myminio/masterfiles myminio/derivatives myminio/supplementalfiles myminio/preserves;
      /usr/bin/mc anonymous set download myminio/derivatives;
      /usr/bin/mc anonymous set download myminio/supplementalfiles;
      exit 0;
      "
    networks:
      internal:

  cypress:
    network_mode: host
    image: cypress/included:latest
    depends_on:
      - avalon
    entrypoint: cypress run -C spec/cypress/cypress.config.js
    working_dir: /e2e
    volumes:
      - ./:/e2e
      - npms:/e2e/node_modules
    environment:
      - CYPRESS_ENV=${CYPRESS_ENV:-local}
      - CYPRESS_grep=${CYPRESS_grep:-@critical}

  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - internal
      - external
    ports:
      - 9099:9090

  node-exporter:
    image: prom/node-exporter
    networks:
      - internal
      - external
    ports:
      - 9100:9100

  prometheus-rails:
    build: https://github.com/discourse/prometheus_exporter.git
    networks:
      - internal
      - external
    ports:
      - 9394:9394

  prometheus-solr:
    image: solr:9
    command: prometheus-exporter/bin/solr-exporter -p 9395 -b http://solr:8983/solr
    networks:
      - internal
      - external
    ports:
      - 9395:9395

  grafana:
    image: grafana/grafana-enterprise
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana.yml:/etc/grafana/provisioning/datasources/grafana.yml
    environment:
     - GF_PLUGINS_PREINSTALL=grafana-clock-panel
    networks:
      - internal
      - external
    ports:
      - 9098:3000
