name: 'Avalon Media System' # used in page titles
domain:
  host: localhost
  port: 80
  protocol: http
dropbox:
  path: /srv/avalon/dropbox
  upload_uri: sftp://avalon.example.edu
encoding:
  engine_adapter: ffmpeg
  presets_path: config/ffmpeg_presets.yml
mediainfo:
  path: '/usr/bin/mediainfo --urlencode' # Fixes mediainfo v20.03 bug with S3 presigned URL
ffmpeg:
  path: '/usr/local/bin/ffmpeg'
email:
  mailer: :smtp
  config:
    address: mail-relay.university.edu
    port: 25
    enable_starttls_auto: false
  comments: 'avalon-comments@example.edu'
  notification: 'avalon-notifications@example.edu'
  support: 'avalon-support@example.edu'
solr:
  configset: avalon
  configset_source_path: <%= File.join(Rails.root, 'solr', 'config') %>
  collection_options:
    async:
    auto_add_replicas:
    collection:
      config_name: avalon
    create_node_set:
    max_shards_per_node:
    num_shards: 1
    replication_factor:
    router:
      name:
      field:
    rule:
    shards:
    snitch:
zookeeper:
  connection_str: "localhost:9983/configs"
streaming:
  server: :generic
  stream_token_ttl: 20 #minutes
  content_path: '/srv/avalon/content'
  rtmp_base: 'rtmp://localhost/avalon'
  http_base: 'http://localhost:3000/streams'
  default_quality: 'auto'
redis:
  host: localhost
  port: 6379
groups:
  system_groups: [administrator, group_manager, manager]
master_file_management:
  strategy: 'none' #'delete', or 'move' (for move uncomment and configure next line)
  #path: '/path/to/move/to'
bib_retriever:
  default:
    protocol: sru
    url: http://zgate.example.edu:9000/exampledb
    query: rec.id='%s'
    retriever_class: 'Avalon::BibRetriever::SRU'
    retriever_class_require: 'avalon/bib_retriever/sru'
controlled_vocabulary:
  path: config/controlled_vocabulary.yml
encode_throttling:
  create_jobs_throttle_threshold: 2
  create_jobs_spacing: 5
  update_jobs_throttle_threshold: 3
  update_jobs_spacing: 10
auth:
  registerable: true
  configuration:
    <% if ENV['LTI_AUTH_KEY'] %>
    - :name: Avalon Lti OAuth
      :provider: :lti
      :hidden: true
      :params:
        :oauth_credentials:
          <%= ENV['LTI_AUTH_KEY'] %>: <%= ENV['LTI_AUTH_SECRET'] %>
    <% end %>
# google_analytics_tracking_id: "someid"
supplemental_files:
  proxy: false
